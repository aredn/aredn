#!/usr/bin/ucode
/*
 * Part of AREDN速 -- Used for creating Amateur Radio Emergency Data Networks
 * Copyright (C) 2023-2025 Tim Wilkinson
 * See Contributors file for additional contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation version 3 of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Additional Terms:
 *
 * Additional use restrictions exist on the AREDN速 trademark and logo.
 * See AREDNLicense.txt for more info.
 *
 * Attributions to the AREDN速 Project must be retained in the source code.
 * If importing this code into a new or existing project attribution
 * to the AREDN速 project must be added to the source code.
 *
 * You must not misrepresent the origin of the material contained within.
 *
 * Modified versions must be modified to attribute to the original source
 * and be marked in reasonable ways as differentiate it from the original
 * version
 */

import * as fs from "fs";
import * as uci from "uci";

const packageStore = "/etc/package_store";
const packageCatalog = `${packageStore}/catalog.json`;

function opkg_with_retry(arg)
{
	for (let i = 0; i < 5; i++) {
		if (system(`opkg ${arg}`) != 255) {
			break;
		}
		sleep(5000);
	}
}

opkg_with_retry("list-installed | sed s/\\ .*// > /etc/permpkg");

if (fs.access(packageCatalog)) {
	// Make sure we can contact the package server before proceeding.
	// We will wait a few minutes before going ahead anyway
	const pkghost = match(uci.cursor().get("aredn", "@downloads[0]", "packages_default"), /^https?:\/\/([^/]+)/)[1];
	for (let i = 0; i < 5; i++) {
		if (system(`ping -q -c 1 -W 5 ${pkghost} > /dev/null 2>&1`) == 0) {
			break;
		}
		print("Failed to contact package server - retry in 60 seconds\n");
		sleep(60000);
	}

    opkg_with_retry("update");
    const catalog = json(fs.readfile(packageCatalog));
	for (let ipkg in catalog.installed) {
		const state = catalog.installed[ipkg];
        if (state == "local") {
            const file = `${packageStore}/${ipkg}.ipk`;
            if (fs.access(file)) {
                opkg_with_retry(`install ${file}`);
			}
		}
        else if (state == "global") {
            opkg_with_retry(`install ${ipkg}`);
		}
	}
}

// Don't do this again
fs.unlink("/etc/cron.boot/reinstall-packages");
