#!/usr/bin/ucode
/*
 * Part of AREDN速 -- Used for creating Amateur Radio Emergency Data Networks
 * Copyright (C) 2022-2025 Tim Wilkinson
 * See Contributors file for additional contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation version 3 of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Additional Terms:
 *
 * Additional use restrictions exist on the AREDN速 trademark and logo.
 * See AREDNLicense.txt for more info.
 *
 * Attributions to the AREDN速 Project must be retained in the source code.
 * If importing this code into a new or existing project attribution
 * to the AREDN速 project must be added to the source code.
 *
 * You must not misrepresent the origin of the material contained within.
 *
 * Modified versions must be modified to attribute to the original source
 * and be marked in reasonable ways as differentiate it from the original
 * version
 */

import * as fs from "fs";
import * as uci from "uci";
import * as services from "aredn.services";

const ip = uci.cursor("/etc/config.mesh").get("setup", "globals", "wifi_ip");
const info = services.get(true);

let data = "";
for (let i = 0; i < length(info.names); i++) {
	data += `${ip}\t${info.names[i]}\n";`
}
for (let i = 0; i < length(info.hosts); i++) {
	const host = info.hosts[i];
	if (!match(host.host, /^xlink\d/) && !match(host.host, /^mid\d/)) {
		data += `${host.ip}\t${replace(host.host, /\.local\.mesh$/, "")}\n`;
	}
}
fs.writefile("/etc/arednlink/hosts", data);
fs.writefile("/etc/arednlink/services", length(info.services) == 0 ? "" : `${join("\n", info.services)}\n`);

// Arednlink checks for changes in updated data, so we dont have to
system("/usr/local/bin/restart-services.sh --force arednlink");
