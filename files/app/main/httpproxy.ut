{%
/*
 * Part of AREDN速 -- Used for creating Amateur Radio Emergency Data Networks
 * Copyright (C) 2024 Tim Wilkinson
 * See Contributors file for additional contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation version 3 of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Additional Terms:
 *
 * Additional use restrictions exist on the AREDN速 trademark and logo.
 * See AREDNLicense.txt for more info.
 *
 * Attributions to the AREDN速 Project must be retained in the source code.
 * If importing this code into a new or existing project attribution
 * to the AREDN速 project must be added to the source code.
 *
 * You must not misrepresent the origin of the material contained within.
 *
 * Modified versions must be modified to attribute to the original source
 * and be marked in reasonable ways as differentiate it from the original
 * version
 */
%}
{%
const url = request.env.QUERY_STRING;
let valid = network.parseURL(url);
if (valid) {
    valid = false;
    const svcs = uciMesh.get("setup", "services", "service") || [];
    const str = `|80|a/httpproxy?${url}`;
    for (let i = 0; i < length(svcs); i++) {
        const pos = index(svcs[i], str);
        if (pos !== -1 && pos + length(str) == length(svcs[i])) {
            valid = true;
            break;
        }
    }
}

response.override = true;
if (valid) {
    uhttpd.send("Status: 200 OK\r\nCache-Control: no-store\r\n\r\n");
    const s = fs.popen(`/usr/bin/wget -O - ${url}`);
    if (s) {
        for (;;) {
            const d = s.read(10240);
            if (!length(d)) {
                break;
            }
            uhttpd.send(d);
        }
        s.close();
    }
}
else {
    uhttpd.send("Status: 404 Not Found\r\nCache-Control: no-store\r\n\r\n");
}
%}
