{%
/*
 * Part of AREDN速 -- Used for creating Amateur Radio Emergency Data Networks
 * Copyright (C) 2024 Tim Wilkinson
 * See Contributors file for additional contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation version 3 of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Additional Terms:
 *
 * Additional use restrictions exist on the AREDN速 trademark and logo.
 * See AREDNLicense.txt for more info.
 *
 * Attributions to the AREDN速 Project must be retained in the source code.
 * If importing this code into a new or existing project attribution
 * to the AREDN速 project must be added to the source code.
 *
 * You must not misrepresent the origin of the material contained within.
 *
 * Modified versions must be modified to attribute to the original source
 * and be marked in reasonable ways as differentiate it from the original
 * version
 */
%}
(function(){
    let lk = document.createElement("link");
    lk.rel = "stylesheet";
    {% if (config.resourcehash) { %}
    lk.onerror = () => {
        lk = document.createElement("link");
        lk.rel = "stylesheet";
        {% if (config.resourcehash) { %}
        lk.href = "/a/css/admin.{{versions.admincss}}.css";
        {% } else { %}
        lk.href = "/a/css/admin.css";
        {% } %}
        document.head.appendChild(lk);
    };
    lk.href = "http://localnode.local.mesh/a/css/admin.{{versions.admincss}}.css";
    {% } else { %}
    lk.href = "/a/css/admin.css";
    {% } %}
    document.head.appendChild(lk);
    document.body.setAttribute("hx-disable", true);
    function loaded() {
        document.body.removeAttribute("hx-disable");
        window["_{{request.env.QUERY_STRING}}"]();
    }
    let hx = document.createElement("script");
    hx.type = 'text/javascript';
    hx.onload = loaded;
    {% if (config.resourcehash) { %}
    hx.onerror = () => {
        hx = document.createElement('script');
        hx.type = "text/javascript";
        hx.onload = loaded;
        {% if (config.resourcehash) { %}
        hx.src = "/a/js/htmx.min.{{versions.htmx}}.js";
        {% } else { %}
        hx.src = "/a/js/htmx.min.js";
        {% } %}
        document.head.appendChild(hx);
    }
    hx.src = "http://localnode.local.mesh/a/js/htmx.min.{{versions.htmx}}.js";
    {% } else { %}
    hx.src = "/a/js/htmx.min.js";
    {% } %}
    document.head.appendChild(hx);
})();
