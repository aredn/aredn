#!/bin/sh
true <<'LICENSE'
  Part of AREDN速 -- Used for creating Amateur Radio Emergency Data Networks
  Copyright (C) 2025 Tim Wilkinson
  See Contributors file for additional contributors

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation version 3 of the License.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.

  Additional Terms:

  Additional use restrictions exist on the AREDN速 trademark and logo.
    See AREDNLicense.txt for more info.

  Attributions to the AREDN速 Project must be retained in the source code.
  If importing this code into a new or existing project attribution
  to the AREDN速 project must be added to the source code.

  You must not misrepresent the origin of the material contained within.

  Modified versions must be modified to attribute to the original source
  and be marked in reasonable ways as differentiate it from the original
  version.

LICENSE

if [ "$#" != "1" ]; then
  echo "Usage: aredn_sysupgrade <firmwarefile>" 1>&2
  exit 1
fi

if [ ! -f "$1" ]; then
  echo "ERROR: Missing firmware file: $1" 1>&2
  exit 1
fi

#
# Pre-upgrade special cases
#
case "$(/usr/local/bin/get_boardid)" in
    MikroTik\ hAP\ ac3)
        # If we're running from RAM we must now format the flash otherwise
        # the install will fail
        if [ "$(cat /proc/mounts | grep overlay)" = "" ]; then
            ubidetach -m 1
            ubiformat /dev/mtd1 -y
            ubiattach -m 1
        fi
        ;;
    *)
        ;;
esac

#
# Generate the backup
#
backup="-n"
if [ ! -f /tmp/do-not-keep-configuration ]; then
  # Stop babel if it's installed.
  # We need to do this here so we get the state information into the backup file.
  if [ -f /etc/init.d/babel ]; then
    /etc/init.d/babel stop
    sleep 1 # Give it a moment or three to stop
    if [ ! -f /etc/state/babel-state ]; then
      sleep 2
    fi
  fi
  cp /dev/null /tmp/sysupgradefilelist
  cat /etc/arednsysupgrade.conf | while read f
  do
    if [ -f "${f}" ]; then
      echo "${f}" >> /tmp/sysupgradefilelist
    fi
  done
  rm -f /tmp/arednsysupgradebackup.tgz
  tar -czf /tmp/arednsysupgradebackup.tgz -T /tmp/sysupgradefilelist > /dev/null 2>&1
  if [ -f /tmp/arednsysupgradebackup.tgz ]; then
    backup="-f /tmp/arednsysupgradebackup.tgz"
  else
    if [ -f /etc/init.d/babel ]; then
      /etc/init.d/babel start
    fi
    echo "ERROR: Failed to create backup - aborting firmware upgrade" 1>&2
    exit 1
  fi
fi

#
# Let users force upgrade a node
#
force=""
if [ -f "/tmp/force-upgrade-this-is-dangerous" ]; then
  force="--force"
fi

/sbin/sysupgrade ${force} ${backup} -q "$1"
