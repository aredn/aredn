#!/usr/bin/ucode
/*
 * Part of AREDN速 -- Used for creating Amateur Radio Emergency Data Networks
 * Copyright (C) 2022-2025 Tim Wilkinson
 * See Contributors file for additional contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation version 3 of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Additional Terms:
 *
 * Additional use restrictions exist on the AREDN速 trademark and logo.
 * See AREDNLicense.txt for more info.
 *
 * Attributions to the AREDN速 Project must be retained in the source code.
 * If importing this code into a new or existing project attribution
 * to the AREDN速 project must be added to the source code.
 *
 * You must not misrepresent the origin of the material contained within.
 *
 * Modified versions must be modified to attribute to the original source
 * and be marked in reasonable ways as differentiate it from the original
 * version
 */

import * as fs from "fs";
import * as configuration from "aredn.configuration";

const node = configuration.getName();

const q = getenv("QUERY_STRING") || "";
const m = match(q, /server=([^&]*)/);
let server = m && m[1];

print("Content-type: text/html\r\n");
print("Cache-Control: no-store\r\n");
print("Access-Control-Allow-Origin: *\r\n");
print("\r\n");
if (!server) {
    print("<html><head><title>ERROR</title></head><body><pre>Provide a server name to run a test between this client and a server [/cgi-bin/ping?server=&lt;ServerName&gt;</pre></body></html>\n");
}
else if (match(server, /[^0-9a-zA-Z\.\-]/)) {
    print("<html><head><title>ERROR</title></head><body><pre>Illegal server name</pre></body></html>\n");
}
else {
    if (!match(server, /\./)) {
        server += ".local.mesh";
    }
    const running = fs.popen(`/bin/ping -c 5 -w 10 ${server} 2>&1`);
    if (!running) {
        print("<html><head><title>ERROR</title></head><body><pre>ping failed</pre></body></html>\n");
    }
    else {
        print("<html><head><title>SUCCESS</title></head>\n");
        print(`<body><pre>Client: ${node}\nServer: ${server}\n`);
        flush();
        for (let line = running.read("line"); length(line); line = running.read("line")) {
            print(line);
            flush();
        }
        running.close();
        print("</pre></body></html>\n");
    }
}
