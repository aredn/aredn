#!/usr/bin/lua
--[[

    Part of AREDN速 -- Used for creating Amateur Radio Emergency Data Networks
    Copyright (C) 2022-2024 Tim Wilkinson
    See Contributors file for additional contributors

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation version 3 of the License.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

    Additional Terms:

    Additional use restrictions exist on the AREDN速 trademark and logo.
        See AREDNLicense.txt for more info.

    Attributions to the AREDN速 Project must be retained in the source code.
    If importing this code into a new or existing project attribution
    to the AREDN速 project must be added to the source code.

    You must not misrepresent the origin of the material contained within.

    Modified versions must be modified to attribute to the original source
    and be marked in reasonable ways as differentiate it from the original
    version

--]]

require("uci")
require("nixio")
require("aredn.utils")
require("aredn.info")

local node = aredn.info.get_nvram("node")

local q = os.getenv("QUERY_STRING") or ""
local server = q:match("server=([^&]*)")

print("Content-type: text/html\r")
print("Cache-Control: no-store\r")
print("Access-Control-Allow-Origin: *\r")
print("\r")
if not server then
    print("<html><head><title>ERROR</title></head><body><pre>Provide a server name to run a test between this client and a server [/cgi-bin/traceroute?server=&lt;ServerName&gt;</pre></body></html>")
elseif server:match("[^%w%-%.]") then
    print("<html><head><title>ERROR</title></head><body><pre>Illegal server name</pre></body></html>")
else
    if not server:match("%.") then
        server = server .. ".local.mesh"
    end
    local ip = uci.cursor("/etc/config.mesh"):get("setup", "globals", "dtdlink_ip")
    local running = io.popen("/bin/traceroute -q 1 -w 1 -s " .. ip .. " " .. server .. " 2>&1")
    if not running then
        print("<html><head><title>ERROR</title></head><body><pre>traceroute failed</pre></body></html>")
    else
        print("<html><head><title>SUCCESS</title></head>")
        print("<body><pre>Client: " .. node .. "\nServer: " .. server)
        io.flush()
        for line in running:lines()
        do
            print(line)
            io.flush()
        end
        running:close()
        print("</pre></body></html>")
    end
end
